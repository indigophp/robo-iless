<?php

namespace Robo\Task\ILess;

/**
 * Task to compile LESS files utilizing the ILess library.
 *
 * @package Robo\Iless
 * @author TamÃ¡s Barta <barta.tamas.d@gmail.com>
 */
class CompileLessTask implements \Robo\Contract\TaskInterface
{

    use \Robo\Common\TaskIO;

    /**
     * The associative array of paths to compile
     * @var array
     */
    protected $paths;

    /**
     * The array of directories to use as import directories in ILess
     * @var array
     */
    protected $importDirs = [];

    /**
     * You can specify the files that should be generated by this task
     * when creating it. The $paths parameter is an associative array, where the
     * keys are the destinations (CSS), and the values are the source (LESS)
     * files.
     * @param array $paths The files that should be compiled, and their sources.
     */
    public function __construct(array $paths = [])
    {
        $this->paths = $paths;
    }

    /**
     * Sets the files to be compiled. The $paths parameter is an associative
     * array, where the keys are the destinations (CSS), and the values are the
     * source (LESS) files.
     *
     * @param  array $paths    The files that should be compiled, and their sources.
     * @return CompileLessTask The same instance on which the method is called
     */
    public function paths(array $paths)
    {
        $this->paths = $paths;
        return $this;
    }

    /**
     * Adds files to be compiled. The $paths parameter is an associative array,
     * where the keys are the destinations (CSS), and the values are the source
     * (LESS) files.
     *
     * @param  array $paths    The files that should be compiled, and their sources.
     * @return CompileLessTask The same instance on which the method is called
     */
    public function addPaths(array $paths)
    {
        $this->paths += $paths;
        return $this;
    }

    /**
     * Sets the import directories, replacing all the old import directories.
     *
     * @param  array  $importDirs The array of paths of the new import directories
     * @return CompileLessTask    The same instance on which the method is called
     */
    public function importDirs(array $importDirs)
    {
        $this->importDirs = $importDirs;
        return $this;
    }

    public function run()
    {
        $parser = new \ILess_Parser([
            'import_dirs' => $this->importDirs,
        ]);

        foreach ($this->paths as $destination => $source) {
            $this->printTaskInfo(sprintf('Compiling <info>%s</info> to <info>%s</info>', $source, $destination));
            try {
                $parser->parseFile($source);
                // I couldn't find a better solution to write the generated CSS
                // to file yet. There should be a stream writer, or similar...
                file_put_contents($destination, $parser->getCSS());
                $this->printTaskInfo(sprintf('Compiling <info>%s</info> to <info>%s</info>', $source, $destination));
            } catch (\ILess_Exception_Parser $e) {
                $this->printTaskError(sprintf(
                    'Compiling <info>%s</info> to <info>%s</info> FAILED',
                    $source,
                    $destination
                ));
            }
        }
    }
}
